@model CMPH_BugTracker.Models.Ticket
@{
    ViewBag.Title = "Edit";
}
<h3><i class="fa fa-angle-right"></i>Edit Ticket</h3>
<div class="row mt">
    <div class="col-lg-12">
        <div class="form-panel">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Ticket</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.OwnerUserId)
                    @Html.HiddenFor(model => model.Created)
                    @Html.HiddenFor(model => model.ProjectId)



                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketPriorityId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TicketStatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @if (User.IsInRole("Admin"))
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.AssignedUser, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("Users", null, "Select User", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AssignedUser, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }

                    @if (User.IsInRole("ProjectManager"))
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.AssignedUser, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("Users", null, "Select User", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.AssignedUser, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="submit" value="Log in" class="btn btn-round btn-success">@*<i class="fa fa-lock"></i>*@Save</button>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div>
            @Html.ActionLink("Back to List", "Index", new { @class = "btn btn-theme" })
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

